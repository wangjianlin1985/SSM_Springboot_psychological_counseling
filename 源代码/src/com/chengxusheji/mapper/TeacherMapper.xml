<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.TeacherMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加教师记录 -->
	<insert id="addTeacher" parameterType="teacher">
		insert into t_teacher(teacherNo,password,teacherName,teacherSex,teacherPhoto,comeDate,teacherDesc) values 
		(#{teacherNo},#{password},#{teacherName},#{teacherSex},#{teacherPhoto},#{comeDate},#{teacherDesc})
	</insert>

	<!-- 按照查询条件分页查询教师记录 -->
	<select id="queryTeacher" resultMap="teacherMap" >
		select t_teacher.* from t_teacher ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="teacherMap" type="teacher">
        <id property="teacherNo" column="teacherNo" />
    </resultMap>

    <!-- 按照查询条件查询所有教师记录 -->
	<select id="queryTeacherList" resultMap="teacherMap" >
		select t_teacher.* from t_teacher ${where}
	</select>

    <!-- 按照查询条件的教师记录数 -->
	<select id="queryTeacherCount" resultType="int">
		select count(*) from t_teacher ${where}
	</select>

	<!-- 根据主键查询某个教师记录 -->
	<select id="getTeacher" parameterType="string" resultMap="teacherMap">
		select * from t_teacher where t_teacher.teacherNo = #{teacherNo}
	</select>

	<!-- 更新教师记录 -->
	<update id="updateTeacher" parameterType="teacher">
		update t_teacher set password=#{password},teacherName=#{teacherName},teacherSex=#{teacherSex},teacherPhoto=#{teacherPhoto},comeDate=#{comeDate},teacherDesc=#{teacherDesc} where teacherNo = #{teacherNo}
	</update>

	<!-- 删除教师记录 -->
	<delete id="deleteTeacher" parameterType="string">
		delete from t_teacher where teacherNo=#{teacherNo}
	</delete>

</mapper>
