<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.StudentMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加用户记录 -->
	<insert id="addStudent" parameterType="student">
		insert into t_student(user_name,password,classObj,name,gender,birthDate,userPhoto,telephone,email,address,regTime) values 
		(#{user_name},#{password},#{classObj.classNo},#{name},#{gender},#{birthDate},#{userPhoto},#{telephone},#{email},#{address},#{regTime})
	</insert>

	<!-- 按照查询条件分页查询用户记录 -->
	<select id="queryStudent" resultMap="studentMap" >
		select t_student.* from t_student,t_classInfo ${where} and t_student.classObj = t_classInfo.classNo limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="studentMap" type="student">
        <id property="user_name" column="user_name" />
        <association property="classObj" column="classObj" select="com.chengxusheji.mapper.ClassInfoMapper.getClassInfo" />
    </resultMap>

    <!-- 按照查询条件查询所有用户记录 -->
	<select id="queryStudentList" resultMap="studentMap" >
		select t_student.* from t_student,t_classInfo ${where} and t_student.classObj = t_classInfo.classNo
	</select>

    <!-- 按照查询条件的用户记录数 -->
	<select id="queryStudentCount" resultType="int">
		select count(*) from t_student,t_classInfo ${where} and t_student.classObj = t_classInfo.classNo
	</select>

	<!-- 根据主键查询某个用户记录 -->
	<select id="getStudent" parameterType="string" resultMap="studentMap">
		select * from t_student where t_student.user_name = #{user_name}
	</select>

	<!-- 更新用户记录 -->
	<update id="updateStudent" parameterType="student">
		update t_student set password=#{password},classObj=#{classObj.classNo},name=#{name},gender=#{gender},birthDate=#{birthDate},userPhoto=#{userPhoto},telephone=#{telephone},email=#{email},address=#{address},regTime=#{regTime} where user_name = #{user_name}
	</update>

	<!-- 删除用户记录 -->
	<delete id="deleteStudent" parameterType="string">
		delete from t_student where user_name=#{user_name}
	</delete>

</mapper>
